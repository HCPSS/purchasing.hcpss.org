<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\block\Entity\Block;

function purchasing_admin_form_node_award_form_alter(&$form, FormStateInterface $form_state) {
  $form['board_information'] = [
    "#type" => "details",
    "#title" => 'Board Information',
    "#open" => false,
    "#group" => "advanced",
    "#access" => true,
    "#weight" => 1,
  ];

  $form['field_board_minutes']['#group'] = 'board_information';
  $form['field_board_report']['#group'] = 'board_information';
}

/**
 * Implementation of hook_form_alter().
 */
function purchasing_admin_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['node_contract_form', 'node_solicitation_form', 'node_quote_form'])) {
    $form['dates'] = [
      "#type" => "details",
      "#title" => 'Dates',
      "#open" => true,
      "#group" => "advanced",
      "#access" => true,
      "#weight" => 0,
    ];

    $form['field_dates_effective']['#group'] = 'dates';

    if (!empty($form['field_due_date'])) {
      $form['field_due_date']['#group'] = 'dates';
    }

    //unset($form['field_dates_effective']['widget'][0]['#title']);
  }
}

/**
 * Implementation of hook_preprocess_HOOK().
 */
function purchasing_admin_preprocess_node_add_list(&$variables) {
  $variables['categories'] = _purchasing_admin_group_categories($variables);
  $variables['blocks'] = _purchasing_admin_get_form_blocks();
}

/**
 * Get node import form blocks.
 *
 * @return array
 */
function _purchasing_admin_get_form_blocks() {
  $block_manager = \Drupal::service('plugin.manager.block');
  $block_names = [
    'solicitation_import_block',
    'vendor_import_block',
    'award_import_block',
    'priced_line_item_import_block',
    'discounted_line_item_import_block',
  ];

  $blocks = [];
  foreach ($block_names as $block_name) {
    $block = $block_manager->createInstance($block_name, []);
    $access = $block->access(\Drupal::currentUser());
    if ($access) {
      $blocks[] = $block->build();
    }
  }

  return $blocks;
}

/**
 * Group content types by category.
 *
 * @return array
 */
function _purchasing_admin_group_categories($variables) {
  $groups = [
    'Procurement Methods' => [
      'contract',
      'solicitation',
      'quote',
    ],
    'awarded line items' => [
      'priced_line_item',
      'discounted_line_item',
      'partner_line_item',
    ],
    'site content' => [
      'article',
      'page'
    ],
  ];

  $categories = [];
  foreach ($variables['types'] as $type) {
    $found = FALSE;
    foreach ($groups as $name => $candidates) {
      if (in_array($type['type'], $candidates)) {
        $categories[$name][] = $type;
        $found = TRUE;
      }
    }

    if (!$found) {
      $categories['other'][] = $type;
    }
  }

  uksort($categories, function ($a, $b) use ($groups) {
    foreach ($groups as $key => $value) {
      if ($a === $key) {
        return -1;
      } else if ($b === $key) {
        return 1;
      }
    }
    return 0;
  });

  return $categories;
}
















